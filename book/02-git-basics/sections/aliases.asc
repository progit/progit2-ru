[[r_git_aliases]]
=== Псевдонимы в Git

(((aliases)))
Прежде, чем закончить эту главу по основам Git, рассмотрим ещё одну маленькую хитрость, которая поможет сделать использование Git проще, легче, и более привычным: псевдонимы (aliases).
Мы не будем ссылаться на них дальше или предполагать, что вы будете пользоваться ими по ходу чтения книги, но вам лучше было бы знать, как их использовать.

Git не будет пытаться сделать вывод о том, какую команду вы хотели ввести, если вы ввели её неполностью.
Если вы не хотите печатать каждую команду для Git целиком, вы легко можете настроить псевдонимы (alias) для любой команды с помощью `git config`.(((git commands, config)))
Вот несколько примеров псевдонимов, которые вы, возможно, захотите задать:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Это означает, что, например, вместо ввода `git commit`, вам достаточно набрать только `git ci`.
По мере освоения Git вам, вероятно, придётся часто пользоваться и другими командами.
В этом случае без колебаний создавайте новые псевдонимы.

Такой способ может также быть полезен для создания команд, которые, как вы думаете, должны существовать.
Например, чтобы исправить неудобство, с которым мы столкнулись при исключении файла из индекса, можно добавить в Git свой собственный псевдоним `unstage`:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Это делает эквивалентными следующие две команды:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Такой вариант кажется немного более понятным.
Также, обычно, добавляют команду `last` следующим образом:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

Таким образом, можно легко просмотреть последний коммит:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Можно сказать, что Git просто заменяет эти команды на созданные вами псевдонимы (alias).
Однако, возможно, вы захотите выполнить внешнюю команду, а не подкоманду Git.
В этом случае, следует начать команду с символа `!`.
Это полезно, если вы пишете свои утилиты для работы с Git-репозиторием.
Продемонстрируем этот случай на примере создания псевдонима `git visual` для запуска `gitk`:

[source,console]
----
$ git config --global alias.visual "!gitk"
----

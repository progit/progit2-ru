=== Git в Bash

(((bash)))(((tab completion, bash)))(((shell prompts, bash)))
Если вы используете Bash, то можете задействовать некоторые из его фишек для облегчения работы с Git.
К слову, Git поставляется с плагинами для нескольких командных оболочек, но они выключены по умолчанию.

Для начала, скачайте файл `contrib/completion/git-completion.bash` из репозитория с исходным кодом Git.
Поместите его в укромное место -- например, в вашу домашнюю директорию -- и добавьте следующие строки в `.bashrc`:

[source,console]
-----
. ~/git-completion.bash
-----

Как только закончите с этим, перейдите в директорию с Git репозиторием и наберите:

[source,console]
----
$ git chec<tab>
----

…и Bash дополнит строку до `git checkout`.
Эта магия работает для всех Git команд, их параметров, удалённых репозиториев и имён ссылок там, где это возможно.

Возможно, вам также пригодится отображение информации о репозитории, расположенном в текущей директории.
Вы можете выводить сколь угодно сложную информацию, но обычно достаточно названия текущей ветки и статуса рабочей директории.
Чтобы снабдить строку приветствия этой информацией, скачайте файл `contrib/completion/git-prompt.sh` из репозитория с исходным кодом Git и добавьте примерно такие строки в `.bashrc`:

[source,console]
-----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
-----

Часть `\w` означает текущую рабочую директорию, `\$` -- индикатор суперпользователя (обычно `$` или `#`), а `__git_ps1 " (%s)"` вызывает функцию, объявленную в `git-prompt.sh`, с аргументом ` (%s)` -- строкой форматирования.
Теперь ваша строка приветствия будет похожа на эту, когда вы зайдёте в директорию с Git репозиторием:

.Кастомизированная строка приветствия `bash`.
image::images/git-bash.png[Кастомизированная строка приветствия `bash`.]

Оба вышеперечисленных скрипта снабжены полезной документацией, загляните внутрь `git-completion.bash` и `git-prompt.sh` чтобы узнать больше.

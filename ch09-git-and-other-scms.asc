[#ch09-git-and-other-scms]
== Git и другие системы контроля версий

Наш мир несовершенен.
Как правило, вы не сможете быстро перевести проект, в котором вы участвуете, на использование Git. 
Иногда вам придётся иметь дело с проектами, использующими другую систему контроля версий, хотя вам и не нравится, что это не Git. 
В первой части этого раздела вы узнаете о способах использования Git в качестве клиента для работы с проектом, размещенном в какой-то другой системе.

В какой-то момент, вы, возможно, захотите перевести свой существующий проект на Git.
Во второй части раздела вы узнаете о том, как провести миграцию с некоторых распространённых систем, а также познакомитесь с методом, который будет работать в нестандартных ситуациях, когда готовых инструментов миграции не существует.

=== Git как клиент

(((Git as a client)))
Git оставляет настолько положительное впечатление на разработчиков, что многие из них придумывают способы, как использовать его на своём компьютере, в случае если остальная часть команды использует другую СКВ.
Для этого разработан целый ряд специальных адаптеров, называемых ``мостами'' (``bridges'').
Здесь мы рассмотрим те, с которыми вы, скорее всего, столкнетесь в работе над реальными проектами.

include::book/09-git-and-other-scms/sections/client-svn.asc[]

include::book/09-git-and-other-scms/sections/client-hg.asc[]

include::book/09-git-and-other-scms/sections/client-bzr.asc[]

include::book/09-git-and-other-scms/sections/client-p4.asc[]

include::book/09-git-and-other-scms/sections/client-tfs.asc[]

[[r_migrating]]
=== Миграция на Git

(((Migrating to Git)))
Если у вас уже есть кодовая база в другой СКВ, но вы решили начать использовать Git, вам необходимо так или иначе перенести миграцию проекта.
В этом разделе описаны некоторые существующие варианты импорта для распространённых систем, а затем показано, как разрабатывать собственные нестандартные варианты импорта.
Вы узнаете, как импортировать данные из некоторых распространённых профессиональных СКВ.
Поскольку они используются большинством разработчиков, для них легко найти качественные инструменты миграции.

include::book/09-git-and-other-scms/sections/import-svn.asc[]

include::book/09-git-and-other-scms/sections/import-hg.asc[]

include::book/09-git-and-other-scms/sections/import-bzr.asc[]

include::book/09-git-and-other-scms/sections/import-p4.asc[]

include::book/09-git-and-other-scms/sections/import-tfs.asc[]

include::book/09-git-and-other-scms/sections/import-custom.asc[]

=== Заключение
После всего вышесказанного вы должны чувствовать себя уверенно, используя Git как клиент для других СКВ, или, импортируя практически любой существующий репозиторий в Git без потери данных.
Следующая глава раскроет перед вами внутреннюю механику Git, так что вы будете способны контролировать каждый байт данных, если это потребуется.
